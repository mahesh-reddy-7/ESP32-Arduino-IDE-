#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

//U8G2_ST7920_192X32_F_8080 u8g2(U8G2_R0, 8, 9, 10, 11, 4, 5, 6, 7, /*enable=*/ 18, /*cs=*/ U8X8_PIN_NONE, /*dc=*/ 17, /*reset=*/ U8X8_PIN_NONE);
//U8G2_ST7920_192X32_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 18 /* A4 */ , /* data=*/ 16 /* A2 */, /* CS=*/ 17 /* A3 */, /* reset=*/ U8X8_PIN_NONE);
//U8G2_ST7920_128X64_F_8080 u8g2(U8G2_R0, 8, 9, 10, 11, 4, 5, 6, 7, /*enable=*/ 18 /* A4 */, /*cs=*/ U8X8_PIN_NONE, /*dc/rs=*/ 17 /* A3 */, /*reset=*/ 15 /* A1 */);	// Remember to set R/W to 0
//U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 18 /* A4 */ , /* data=*/ 16 /* A2 */, /* CS=*/ 17 /* A3 */, /* reset=*/ U8X8_PIN_NONE);
//U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 13, /* data=*/ 11, /* CS=*/ 10, /* reset=*/ 8);
//U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 14, /* data=*/ 13, /* CS=*/ 15, /* reset=*/ 16); // Feather HUZZAH ESP8266, E=clock=14, RW=data=13, RS=CS
U8G2_ST7920_128X64_F_HW_SPI u8g2(U8G2_R0, /* CS=*/ 10, /* reset=*/ 8);
//U8G2_ST7920_128X64_F_HW_SPI u8g2(U8G2_R0, /* CS=*/ 15, /* reset=*/ 16); // Feather HUZZAH ESP8266, E=clock=14, RW=data=13, RS=CS

int rpm, soc, block_fill, range;
float temp;

void draw_main(void) {


  u8g2.setFont(u8g2_font_7Segments_26x42_mn);
  //  u8g2.setFont(u8g2_font_timB24_tf);
  rpm = random(0, 60);

  if (rpm < 10)
    u8g2.setCursor(102, 50);
  else
    u8g2.setCursor(70, 50);

  u8g2.print(rpm);
  u8g2.setFont(u8g2_font_timB10_tf);
  u8g2.setCursor(95, 64);
  u8g2.print("km/h");

  /*********************************************************  BATTERY SYMBOL  *********************************************/
  u8g2.drawLine(3, 2, 6, 2);

  u8g2.drawLine(1, 3, 8, 3);
  u8g2.drawLine(1, 17, 8, 17);


  u8g2.drawLine(1, 4, 1, 17);
  u8g2.drawLine(8, 17, 8, 4);
  soc = random(0, 100);
  block_fill = soc / 10;

  for (int i = 15 ; i >= (15 - block_fill) ; i --) {
    u8g2.drawLine(3, i, 6, i);
  }

  u8g2.setFont(u8g2_font_lastapprenticebold_tr);
  u8g2.setCursor(11, 17);
  u8g2.print(soc);
  u8g2.setFont(u8g2_font_timB10_tf);
  if (soc < 100)
    u8g2.setCursor(25, 17);
  else
    u8g2.setCursor(31, 17);

  u8g2.print("%");

  u8g2.setCursor(2, 36);
  u8g2.setFont(u8g2_font_lastapprenticebold_tr);
  temp = 31.2;
  u8g2.print(temp);

  u8g2.drawCircle(34, 26, 2);
  u8g2.setCursor(38, 36);
  u8g2.print("c");
  /********************************************************* range ******************************/
  range = random(0, 100);
  if (range < 10)
    u8g2.setCursor(16, 64);
  else
    u8g2.setCursor(2, 64);
  u8g2.setFont(u8g2_font_profont29_mn );

  u8g2.print(range);
  if (range > 99)
    u8g2.setCursor(49, 64);
  else
    u8g2.setCursor(35, 64);

  u8g2.setFont(u8g2_font_timB10_tf);
  u8g2.print("km");

#if 0
  /*********************************************************    SPEED    *********************************************/
  /************ First Two horizontal lines *****************/
  u8g2.drawLine(70, 1, 128, 1);
  u8g2.drawLine(70, 2, 128, 2);
  /************ First Two vertical lines *****************/
  u8g2.drawLine(54, 52, 54, 16);
  u8g2.drawLine(55, 52, 55, 16);
  /************ Diagonal lines *****************/
  u8g2.drawLine(55, 15, 69, 1);
  u8g2.drawLine(56, 15, 70, 1);
#endif



}



void setup(void) {
  u8g2.begin();
  // u8g2.enableUTF8Print();
}



void loop(void) {
  // u8g2.clearBuffer();					// clear the internal memory


  u8g2.firstPage();
  do {
    //u8g2_prepare();
    draw_main();
  } while ( u8g2.nextPage() );



  //u8g2.sendBuffer();					// transfer internal memory to the display
  delay(1000);
}
